<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tyut.selab.rule.mapper.RuleContentMapper">

    <resultMap id="BaseResultMap" type="tyut.selab.rule.domain.PO.RuleContent">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="textAddress" column="text_address" jdbcType="VARCHAR"/>
            <result property="createUser" column="create_user" jdbcType="BIGINT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateUser" column="update_user" jdbcType="BIGINT"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,text_address,create_user,
        create_time,update_user,update_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from rule_content
        where  id = #{id,jdbcType=INTEGER} 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from rule_content
        where  id = #{id,jdbcType=INTEGER} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="tyut.selab.rule.domain.PO.RuleContent" useGeneratedKeys="true">
        insert into rule_content
        ( id,text_address,create_user
        ,create_time,update_user,update_time
        )
        values (#{id,jdbcType=INTEGER},#{textAddress,jdbcType=VARCHAR},#{createUser,jdbcType=BIGINT}
        ,#{createTime,jdbcType=TIMESTAMP},#{updateUser,jdbcType=BIGINT},#{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="tyut.selab.rule.domain.PO.RuleContent" useGeneratedKeys="true">
        insert into rule_content
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="textAddress != null">text_address,</if>
                <if test="createUser != null">create_user,</if>
                <if test="createTime != null">create_time,</if>
                <if test="updateUser != null">update_user,</if>
                <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=INTEGER},</if>
                <if test="textAddress != null">#{textAddress,jdbcType=VARCHAR},</if>
                <if test="createUser != null">#{createUser,jdbcType=BIGINT},</if>
                <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
                <if test="updateUser != null">#{updateUser,jdbcType=BIGINT},</if>
                <if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="tyut.selab.rule.domain.PO.RuleContent">
        update rule_content
        <set>
                <if test="textAddress != null">
                    text_address = #{textAddress,jdbcType=VARCHAR},
                </if>
                <if test="createUser != null">
                    create_user = #{createUser,jdbcType=BIGINT},
                </if>
                <if test="createTime != null">
                    create_time = #{createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updateUser != null">
                    update_user = #{updateUser,jdbcType=BIGINT},
                </if>
                <if test="updateTime != null">
                    update_time = #{updateTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER} 
    </update>
    <update id="updateByPrimaryKey" parameterType="tyut.selab.rule.domain.PO.RuleContent">
        update rule_content
        set 
            text_address =  #{textAddress,jdbcType=VARCHAR},
            create_user =  #{createUser,jdbcType=BIGINT},
            create_time =  #{createTime,jdbcType=TIMESTAMP},
            update_user =  #{updateUser,jdbcType=BIGINT},
            update_time =  #{updateTime,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=INTEGER} 
    </update>
</mapper>
